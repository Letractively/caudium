# $Id$
AC_INIT(perlmod.c)
AC_CONFIG_HEADER(perl_machine.h)

CAUDIUM_MODULE_INIT()

AC_ARG_WITH(perl, [  --with-perl           enable the Perl module],[],
	    [with_perl="yes"])

if test "x$with_perl" = "xno"; then :; else

  if test "x$with_perl" = "xyes"; then
    AC_CHECK_PROGS(perl, perl perl5, x)
  else
    AC_CHECK_PROGS(perl, "$with_perl" perl perl5, x)
  fi

  AC_MSG_CHECKING(if perl is embeddable)
  AC_CACHE_VAL(pike_cv_perlmod_have_perl,
  [
    pike_cv_perlmod_have_perl=no

    objs=

    if test x$perl != xx ; then
      # We have perl, but do we have perlembed?
      PERL_LDFLAGS=`perl -MExtUtils::Embed -e ldopts`
      PERL_CCFLAGS=`perl -MExtUtils::Embed -e ccopts`

      if test "x$PERL_LDFLAGS$PERL_CCFLAGS" != x; then
	OLD_LIBS="${LDFLAGS-}"
	OLD_CFLAGS="${CFLAGS-}"
	CFLAGS="$CFLAGS $PERL_CCFLAGS"
	LIBS="$LIBS $PERL_LDFLAGS"

	AC_TRY_RUN([
#include <EXTERN.h>
#include <perl.h>
#include <unistd.h>

static PerlInterpreter *my_perl;

int main(int argc, char **argv, char **env)
{
  char *args[4];
  args[0]="perl";
  args[1]="-e";
  args[2]="1";
  args[3]=0;
  alarm(10);
  
  my_perl = perl_alloc();
#ifndef DBsub
  /* perl5.6 */
  PL_perl_destruct_level=2;
#else
  /* perl5.005 */
  perl_destruct_level=2;
#endif
  perl_construct(my_perl);
  perl_parse(my_perl, NULL, 2, args, (char **)NULL);
  perl_run(my_perl);
  perl_destruct(my_perl);
  perl_free(my_perl);
  return 0;
}
	],pike_cv_perlmod_have_perl=yes)

	LIBS="${OLD_LIBS-}"
	CFLAGS="${OLD_CFLAGS-}"
      fi
    fi
  ])

  if test "x$pike_cv_perlmod_have_perl" = xyes ; then
    extra_objs='perlxsi.o'
    extra_srcs='perlxsi.c'
    if test "x$PERL_CCFLAGS" = x ; then
      PERL_LDFLAGS=`perl -MExtUtils::Embed -e ldopts`
      PERL_CCFLAGS=`perl -MExtUtils::Embed -e ccopts`
    fi
    AC_DEFINE(HAVE_PERL)
    AC_MSG_RESULT(yes)
  else
    PERL_LDFLAGS=''
    PERL_CCFLAGS=''
    AC_MSG_RESULT(no)
  fi
fi

AC_SUBST(perl)
AC_SUBST(extra_objs)
AC_SUBST(extra_srcs)
AC_SUBST(PERL_LDFLAGS)
AC_SUBST(PERL_CCFLAGS)


AC_OUTPUT(Makefile.pre, [make -f Makefile.pre depend])


