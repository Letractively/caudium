#! /bin/sh
# postinst script for caudium
#
# see: dh_installdeb(1)

set -e

. /usr/share/debconf/confmodule

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see /usr/share/doc/packaging-manual/
#
# quoting from the policy:
#     Any necessary prompting should almost always be confined to the
#     post-installation script, and should be protected with a conditional
#     so that unnecessary prompting doesn't happen if a package's
#     installation fails and the `postinst' is called with `abort-upgrade',
#     `abort-remove' or `abort-deconfigure'.

case "$1" in
    configure)
    db_get caudium/config_port
    if test -z "$RET"; then
	CONFIG_PORT=22202
    else
	CONFIG_PORT="$RET"
    fi

    echo -e Config port: $CONFIG_PORT

    db_get caudium/listen_on
    if test -z "$RET"; then
	LISTEN_IF="`hostname -f`"
    else
	LISTEN_IF="$RET"
    fi
    echo Listen on interface: $LISTEN_IF

    db_get caudium/start_options
    START_OPTIONS=

    for o in `echo $RET | sed -e 's/,//g'`; do
	case $o in
	    threads) START_OPTIONS="$START_OPTIONS --with-threads" ;;
	    debug) START_OPTIONS="$START_OPTIONS --with-debug" ;;
	    once) START_OPTIONS="$START_OPTIONS --once" ;;
	    profile) START_OPTIONS="$START_OPTIONS --with-profile" ;;
	    fd-debug) START_OPTIONS="$START_OPTIONS --with-fd-debug" ;;
	esac
    done
    echo Start options: $START_OPTIONS
    db_stop
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    db_stop
    db_purge
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 0
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0


